{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/kieralynnwilson/Documents/Coding%20Projects/Habit%20Tracker/habit%20web%20app/habit-tracker/Front-end/src/app/about/page.tsx"],"sourcesContent":["// pages/about.tsx\nimport React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"min-h-screen  px-6 py-12 flex flex-col items-center\">\n      <h1 className=\"text-4xl md:text-6xl font-bold text-green-600 text-center mb-8\">\n        Grains of Sand: <br></br> A Habit Tracker\n      </h1>\n      <section className=\"max-w-2xl text-center text-gray-700 text-lg leading-relaxed\">\n          <div\n            className=\"mx-auto w-full max-w-xl px-6 py-4 mb-4 rounded-lg border\"\n            style={{\n              backgroundColor: \"rgba(34, 197, 94, 0.4)\",\n              borderColor: \"rgba(34, 197, 94, 1)\",\n              borderWidth: \"2px\",\n              width: \"33vw\", // Center third of the viewport width\n              minWidth: \"300px\", // Optional: prevent too small on mobile\n              maxWidth: \"600px\", // Optional: prevent too wide on large screens\n            }}\n            >\n        <p className='text-white'>\n          {/* You can customize this paragraph with your actual description */}\n          Grains of Sand is a habit tracking tool designed to help you build trust in yourself to create consistent change.\n          Only five habits can be created, keeping you focused on small sustained change. The idea is to commit to completing\n          these habits every day until they become second nature. The app is designed to be clean, simple, and intuitive. \n          Think of these small habits as grains of sand — each one seems small but you can build a tower with grains of sand.\n          \n          {/* to help you build consistent, meaningful routines by tracking the smallest steps daily. Think of each habit as a grain of sand — over time, they form mountains. */}\n        </p>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default About;"],"names":[],"mappings":"AAAA,kBAAkB;;;;;;AAGlB,MAAM,QAAQ;IACZ,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;;oBAAiE;kCAC7D,8OAAC;;;;;oBAAQ;;;;;;;0BAE3B,8OAAC;gBAAQ,WAAU;0BACf,cAAA,8OAAC;oBACC,WAAU;oBACV,OAAO;wBACL,iBAAiB;wBACjB,aAAa;wBACb,aAAa;wBACb,OAAO;wBACP,UAAU;wBACV,UAAU;oBACZ;8BAEJ,cAAA,8OAAC;wBAAE,WAAU;kCAC0D;;;;;;;;;;;;;;;;;;;;;;AAY/E;uCAEe"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///Users/kieralynnwilson/Documents/Coding%20Projects/Habit%20Tracker/habit%20web%20app/habit-tracker/Front-end/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;AA0BA,8BAA8B;AAzB9B,SAASA,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAWtB,OAAO,MAAMG,eAAe;AAG5B,EAAC;;;;;;;;;;AAED,cAAc,qCAAoC,sBAAA;AAElD,UAAA,kDAA4D;AAC5D,MAAA,CAAO,MAAMK;IAAAA;IAAAA,SAAc,IAAIX,mBAAmB;YAChDY,QAAAA;YAAAA,GAAY;YAAA;wBACVC,IAAAA;oBAAAA,CAAMZ,UAAUa;oBAAAA,OAAQ;yBACxBC,MAAM;8BACNC,IAAAA,CAAAA,GAAU;wBAAA,QAAA;4BAAA,IAAA;4BAAA;yBAAA;;uBACV,2CAA2C;;iBAC3CC,YAAY;sBACZC,IAAAA,CAAAA;YAAAA,CAAU;SAAA;;SACVC,UAAU,EAAE;UACd,QAAA;YAAA,MAAA;gBACAC,OAAU,QAAA;wBAAA;4BACRC,KAAAA,CAAAA,GAAAA,IAAYnB,uKAAZmB,CAAAA,sBAAYnB,EAAAA,MAAAA,MAAAA,MAAAA,EAAAA,iBAAAA,CAAAA,CAAAA,EAAAA,iTAAAA,CAAAA,UAAAA,CAAAA,GAAAA,CAAAA,KAAAA,CAAAA,KAAAA,MAAAA,CAAAA,CAAAA,EAAAA,CAAAA,EAAAA,EAAAA;4BACd,OAAA,GAAA,iTAAA,CAAA,UAAA,CAAA,KAAA,CAAA,CAAA,EAAA,iTAAA,CAAA,UAAA,CAAA,MAAA,EAAA;4BACA,MAAA,CAAA,YAAA,CAAA","ignoreList":[0]}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}